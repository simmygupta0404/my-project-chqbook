$Black: #000;
$White: #fff;
$Blue: #00b9f5;
$DBlue: #012b72;
// $Red: #ff4b55;
// $Yellow: #f5a623;
// $Green: #21c17a;
$Orange: #ffa400;
$borderCol: #ebebeb;
$DBlack: #182233;
$LGrey: #999;
$TextCol: #222;
// $subTextCol: #7b93b4;
$DGrey: #444;
$LBlack: #333;
$greyBG: #fafcfb;
$insuText: #f05a22;
$GreyBorder: #e6ebf3;
$LBlue: #deeaee;


$Green: #00C673;
$Yellow: #FF9E00;
$Red: #FF4B55;
$subTextCol: #536E92;
$SectionBG: #f6f8fc;

.clear {
  clear: both;
}

.fullWidth {
  width: 100%;
}

.disFlex {
  display: flex;
}

.flexDisRow {
  flex-direction: row;
}

.flexDisCol {
  flex-direction: column;
}

.overHidden {
  overflow: hidden;
}

.posAbo {
  position: absolute;
}

.posRel {
  position: relative;
}

.posFix {
  position: fixed;
}

.hide {
  display: none;
}

.show {
  display: block;
}

.inBlock {
  display: inline-block;
}

.cursor {
  cursor: pointer;
}

.capitalize {
  text-transform: capitalize;
}

.whiteBG {
  background: $White;
}

.blueBG {
  background: $DBlue;
}

.uppercase {
  text-transform: uppercase;
}

//Adding New Mixin Kavita Start
.row {
  @extend .disFlex;
  @extend .flexDisRow;
}

.col {
  @extend .disFlex;
  @extend .flexDisCol;
}

.BB {
  border-bottom: 1px solid $borderCol;
}

.Bfull {
  border: 1px solid $borderCol;
}

.BT {
  border-top: 1px solid $borderCol;
}

.noPadding{
  padding: 0;
}

.noMargin{
  margin: 0;
}

.overHidden {
  overflow: hidden;
}

.posRel {
  position: relative;
}

.posAbo {
  position: absolute;
}

@mixin fontStyle($size: false, $color: false, $weight: false) {
  @if $size {
    font-size: $size;
  }
  @if $color {
    color: $color;
  }
  @if $weight {
    font-weight: $weight;
  }
}

@mixin ellipsis($line) {
  // lines: $line;
  text-overflow: ellipsis;
}

@mixin align($content, $items) {
  justify-content: $content;
  align-items: $items;
}

@mixin widthHeight($width, $height) {
  width: $width;
  height: $height;
}

@mixin fontIcon($size, $color: false) {
  font-size: $size;
  @if $color {
    color: $color;
  }
}

@mixin position($position, $top, $right, $bottom, $left) {
  position: $position;
  top: $top;
  right: $right;
  bottom: $bottom;
  left: $left;
}

@mixin padd($top, $right, $bottom, $left) {
  padding-top: $top;
  padding-right: $right;
  padding-bottom: $bottom;
  padding-left: $left;
}

@mixin marg($top, $right, $bottom, $left) {
  margin-top: $top;
  margin-right: $right;
  margin-bottom: $bottom;
  margin-left: $left;
}

//Adding New Mixing Kavita End
@mixin textTruncate {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

@mixin border-radius($radius) {
  -moz-border-radius: $radius;
  -webkit-border-radius: $radius;
  border-radius: $radius;
}

@mixin bShadow($value) {
  -moz-box-shadow: $value;
  -webkit-box-shadow: $value;
  box-shadow: $value;
}

@mixin transition($args...) {
  -webkit-transition: $args;
  -moz-transition: $args;
  -ms-transition: $args;
  -o-transition: $args;
  transition: $args;
}

@mixin opacity($pixels) {
  opacity: $pixels;
}

@mixin padd($pixels) {
  padding: $pixels;
}

@mixin marg($pixels) {
  margin: $pixels;
}

@mixin pos($type) {
  position: $type;
}

@mixin fWeight($fWeight) {
  font-weight: $fWeight;
}

@mixin fSize($fSize) {
  font-size: $fSize;
}

@mixin lHeight($lHeight) {
  line-height: $lHeight;
}

@mixin bTop($value) {
  border-top: $value;
}

@mixin display($type) {
  display: $type;
}

@mixin tAlign($type) {
  text-align: $type;
}

@mixin overflow($type) {
  overflow: $type;
}

@mixin tTransform($type) {
  text-transform: $type;
}

@mixin tDecor($type) {
  text-decoration: $type;
}

@mixin zIndex($zIndex) {
  z-index: $zIndex;
}

@mixin bg-pos($pos) {
  background-position: $pos;
}

@mixin top($value) {
  top: $value;
}

@mixin bottom($value) {
  bottom: $value;
}

@mixin left($value) {
  left: $value;
}

@mixin right($value) {
  right: $value;
}

//Mixins for creating more color from the base colors defined in framework

@mixin bg-opacity($color, $opacity) {
  background: rgba($color, $opacity);
}
.noBorder {
  border: 0 !important;
}



.FilterSelect {
    &.showOverlay {
        &:before {
            @include position(fixed, 0, 0, 0, 0);
            content: "";
            background: rgba(0, 0, 0, 0.15);
            z-index: 10000;
        }
        > * {
            position: relative;
            z-index: 10001;
            background: $White;
        }
    }
    &__content {
        position: relative;
    }
    &__trigger {
        padding: 14px 18px 22px;
        > label {
            @include fontStyle(12px, $subTextCol, 400);
            line-height: 1.33;
            display: block;
            text-transform: uppercase;
        }
        > span {
            @include fontStyle(14px, $DBlack, 700);
            @include textTruncate();
            line-height: 1.43;
            display: inline-block;
            vertical-align: middle;
            padding-right: 5px;
            max-width: 150px;
        }
        > i {
            @include fontStyle(20px, $DBlack);
            display: inline-block;
            vertical-align: middle;
            transform: rotate(-90deg);
        }
    }
    &__options {
        @include position(absolute, false, false, 0, 0);
        transform: translateY(100%);
        background: $White;
        width: 210px;
        max-height: 290px;
        overflow-y: auto;
        &.hide {
            display: none;
        }
        &__option {
            @include fontStyle(14px, $subTextCol);
            line-height: 1.43;
            padding: 14px 16px;
            cursor: pointer;
            &:not(:last-child) {
                border-bottom: 1px solid $GreyBorder;
            }
            &.selected {
                background: grey;
                color: $White;
            }
        }
    }
}